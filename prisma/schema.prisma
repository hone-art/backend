generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL")
}

model Image {
  id       Int       @id @default(autoincrement())
  url      String
  filePath String
  Entry    Entry[]
  Project  Project[]
  User     User[]

  @@map("images")
}

model User {
  id           Int       @id @default(autoincrement())
  img_id       Int?
  display_name String?
  uuid         String    @unique
  user_name    String    @unique
  Entry        Entry[]
  Project      Project[]
  img          Image?    @relation(fields: [img_id], references: [id])
  Comment      Comment[]

  @@map("users")
}

model Project {
  id           Int      @id @default(autoincrement())
  title        String?
  description  String?
  img_id       Int?
  user_id      Int
  updated_date DateTime @default(now())
  Entry        Entry[]
  img          Image?   @relation(fields: [img_id], references: [id])
  user         User     @relation(fields: [user_id], references: [id])

  @@map("projects")
}

model Entry {
  id           Int       @id @default(autoincrement())
  description  String?
  img_id       Int?
  project_id   Int
  user_id      Int
  created_date DateTime  @default(now())
  img          Image?    @relation(fields: [img_id], references: [id])
  project      Project   @relation(fields: [project_id], references: [id])
  user         User      @relation(fields: [user_id], references: [id])
  Comment      Comment[]

  @@map("entries")
}

model Comment {
  id          Int    @id @default(autoincrement())
  description String
  entry       Entry  @relation(fields: [entry_id], references: [id])
  user        User   @relation(fields: [user_id], references: [id])
  entry_id    Int
  user_id     Int

  @@map("comments")
}
